name: Python package

on: [push]
jobs: 
  runner-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        services:
          [
            "./microservices/authorization",
            "./microservices/device",
            "./microservices/user",
          ]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ciaociao
          POSTGRES_DB: test_database
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: ${{ matrix.services }}/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Setup repo
        working-directory: ${{ matrix.services }}
        run: poetry config virtualenvs.in-project true;
          poetry update;
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Run tests
        working-directory: ${{ matrix.services }}
        run: source .venv/bin/activate;
          export POWERTOOLS_TRACE_DISABLED=True;
          make test;

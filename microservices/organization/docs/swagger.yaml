


openapi: 3.0.0
info:
  description: Organization microservice api
  version: 1.0.0-oas3
  title: Organization API
  contact:
    email: rtrivellato@hydo.cloud
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

servers:
  - url: http://api.dev.hydo.cloud
    description: dev server

paths:
  /organizations:
    post:
      summary: Create organzation
      operationId: createOrganization
      description: |
        Create user organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                licenseId:
                  type: number
        description: organization parameters
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:                   
                      organizations:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            licenseid:
                              type: integer
                            ownerId:
                              type: string
                              format: uuid                                       
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: error processing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Internal server error'
    get:
      summary: List organzations
      operationId: getOrganizations
      description: |
        List user organizations or all organizations form admin
      parameters:
        - in: query
          name: page
          schema:
            type: number
        - in: query
          name: pageSize
          schema:
            type: number

      responses:
        '201':
          description: organization created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OK'
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Bad request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /organizations/{organizationId}:
    get:
      summary: List organzations
      operationId: getOrganization
      description: |
        Organization information
      parameters:
        - name: organizationId
          in: path
          description: Organization Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: organization's data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OK'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: 'Organization not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Not found'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Internal server error'
    put:
      summary: Edit organzation
      operationId: editOrganization
      description: |
        Edit organization data
      parameters:
        - name: organizationId
          in: path
          description: Organization Id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditOrganization'
        description: organization parameters
      responses:
        '201':
          description: organization created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OK'
        '400':
          description: 'invalid input, object invalid'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Bad request'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: 'Not authorized to perform update'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Forbidden'
        '500':
          description: error processing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Internal server error'
    delete:
      summary: Delete organzation
      operationId: deleteOrganization
      description: |
        Delete rganization
      parameters:
        - name: organizationId
          in: path
          description: Organization Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleOK'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: 'Organization not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Not found'
        '500':
          description: error processing operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'Internal server error'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT 
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:
    Organization:
      title: Organization in Hydo
      type: object
      properties:
        id:
          type: integer
          description: id
        name:
          type: string
          description: name
        licenseId:
          type: integer
          description: License id 
        userId:
          type: string
          format: uuid
          description: user id
      required:
        - name
        - licenseId
        - user
    EditOrganization:
      title: Edit organization in Hydo
      type: object
      properties:
        name:
          type: string
          description: name
        licenseId:
          type: integer
          description: License id 
    OK:
      title: Ok response
      type: object
      properties:
        data:
          type: object
          properties:
            organizations:
              type: array
              items:
                $ref: '#/components/schemas/Organization'
            total:
              type: number
            nextPage:
              type: number
            previousPage:
              type: number
            totalpages:
              type: number
      required:
        - name
        - licenseId
        - userId
    SimpleOK:
      title: Ok response
      type: object
      properties:
        message:
          type: string
          description: error message
    Error:
      title: Error response
      type: object
      properties:
        message:
          type: string
          description: error message

security:
  - bearerAuth: []
